### @package _global_
##
### specify here default evaluation configuration
##defaults:
##  - _self_
##  - datamodule: ubc.yaml # choose the datamodule for evaluation
##  - model: classifycompare.yaml   # voting.yaml   newvote.yaml   savefeatures.yaml
##  - callbacks: test.yaml
##  - logger: wandb.yaml   # none.yaml    wandb
##  - trainer: gpu.yaml
##  - log_dir: evaluation.yaml
##
##  - experiment: null
##
##  # enable color logging
##  - override hydra/hydra_logging: colorlog
##  - override hydra/job_logging: colorlog
##
##original_work_dir: ${hydra:runtime.cwd}
##
##data_dir: ${original_work_dir}/data/
##
##print_config: True
##
##ignore_warnings: True
##
##seed: 42
##
##name: "default"
##
### passing checkpoint path is necessary
##ckpt_path: "/home/compu/LJC/colon_compare/scripts/scripts/logs/experiments/runs/agcc/classifycompare/vit_large_r50_s32_384/2023-02-15_21-28-00/checkpoints/epoch_011.ckpt"
#
## @package _global_
#
## specify here default training configuration
#defaults:
#  - _self_
#  - datamodule: ubc.yaml # colon K16 or K19 ubc agcc
#  - model: classifycompare.yaml   # classify4.yaml  classify4 voting  classifycompare.yaml
#  - callbacks: default.yaml     # default
#  - logger: wandb.yaml # set logger here or use command line (e.g. `python train.py logger=tensorboard`)   # none  wandb
#  - trainer: default.yaml     # default   gpu
#  - log_dir: default.yaml     # default debug
#
#  # experiment configs allow for version control of specific configurations
#  # e.g. the best hyperparameters for each combination of model and datamodule
#  - experiment: null
#
#  # debugging config (enable through command line, e.g. `python train.py debug=default)
#  - debug: null
#
#  # config for hyperparameter optimization
#  - hparams_search: null
#
#  # optional local config for machine/user specific settings
#  # it's optional since it doesn't need to exist and is excluded from version control
#  - optional local: default.yaml
#
#  # enable color logging
#  - override hydra/hydra_logging: colorlog
#  - override hydra/job_logging: colorlog
#
## path to original working directory
## hydra hijacks working directory by changing it to the new log directory
## https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
#original_work_dir: ${hydra:runtime.cwd}
#
## path to folder with data
#data_dir: ${original_work_dir}/data/
#
## pretty print config at the start of the run using Rich library
#print_config: True
#
## disable python warnings if they annoy you
#ignore_warnings: True
#
## set False to skip model training
#train: True
#
## evaluate on test set, using best model weights achieved during training
## lightning chooses best weights based on the metric specified in checkpoint callback
#test: True
#
## seed for random number generators in pytorch, numpy and python.random
#seed: 42
#
## default name for the experiment, determines logging folder path
## (you can overwrite this name in experiment configs)
#name: "default"
#
#ckpt_path: "/home/compu/LJC/colon_compare/scripts/scripts/logs/experiments/runs/colon/classifycompare/vit_large_r50_s32_384/2022-10-08_17-41-28/checkpoints/epoch_008.ckpt"

# @package _global_

# specify here default evaluation configuration
defaults:
  - _self_
  - datamodule: gastric.yaml # colon or gastric or havard2 or ubc
  - model: classifycompare4.yaml   # voting.yaml   newvote.yaml   savefeatures.yaml
  - callbacks: test.yaml
  - logger: wandb.yaml   # none.yaml    wandb
  - trainer: gpu.yaml
  - log_dir: evaluation.yaml

  - experiment: null

  # enable color logging
  - override hydra/hydra_logging: colorlog
  - override hydra/job_logging: colorlog

original_work_dir: ${hydra:runtime.cwd}

data_dir: ${original_work_dir}/data/

print_config: True

ignore_warnings: True

seed: 42

name: "default"

ckpt_path: "/home/compu/LJC/colon_compare/scripts/scripts/logs/experiments/runs/gastric/classifycompare/vit_base_r50_s16_384/2023-05-09_00-45-13/checkpoints/epoch_021.ckpt"